class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ivv;
        vector<int> iv(k, 0);
        subsum(ivv, iv, k, n, 9);
        return ivv;
    }
    
    void subsum(vector<vector<int>> &ivv, vector<int> &iv, int k, int n, int m) {
	    if (n < 1) return;
        if (k > m) return;
        if (k == 1 && n > m) return;
        if (k == 1 && n <= m) {
    	    iv[0] = n;
        	ivv.push_back(iv);
        	return;
    	}
    	if (k > 1) {
        	for (int i = m; i >= k; --i) {
            	iv[k-1] = i;
            	subsum(ivv, iv, k-1, n-i, i-1);
        	}
    	}
	}
};
